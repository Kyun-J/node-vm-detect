name: Npm publish

on:
  workflow_dispatch:

jobs:
  create-publish-branch:
    runs-on: ubuntu-latest
    outputs:
      publish-branch: ${{ steps.publish-branch.outputs.publish-branch }}
    steps:
      - uses: actions/checkout@v4
      - uses: fregante/setup-git-user@v2
      - name: Set publish branch name
        id: publish-branch
        run: |
          echo "publish-branch=publish_${{ github.run_id }}" >> $GITHUB_OUTPUT
      - name: Create publish branch
        run: |
          git checkout -b ${{ steps.publish-branch.outputs.publish-branch }}
          git push origin ${{ steps.publish-branch.outputs.publish-branch }}
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm i
      - name: Bundle
        run: npm run bundle
      - name: Commit and push
        run: |
          git add .
          git commit -m "ready to publish"
          git push origin ${{ steps.publish-branch.outputs.publish-branch }}

  # macos-build:
  #   runs-on: macos-latest
  #   needs: [create-publish-branch]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ needs.create-publish-branch.outputs.publish-branch }}
  #         submodules: 'recursive'
  #     - uses: fregante/setup-git-user@v2
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #     - name: Install dependencies
  #       run: npm i
  #     - name: Build
  #       run: npm run gyp:mac
  #     - name: Commit and push
  #       run: |
  #         git add .
  #         git commit -m "build:mac"
  #         git push origin ${{ needs.create-publish-branch.outputs.publish-branch }}

  # windows-x64-build:
  #   runs-on: windows-latest
  #   needs: [create-publish-branch, macos-build]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ needs.create-publish-branch.outputs.publish-branch }}
  #         submodules: 'recursive'
  #     - uses: fregante/setup-git-user@v2
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #     - name: Install dependencies
  #       run: npm i
  #     - name: Build
  #       run: npm run gyp:win:x64
  #     - name: Commit and push
  #       run: |
  #         git add .
  #         git commit -m "build:win:x64"
  #         git push origin ${{ needs.create-publish-branch.outputs.publish-branch }}

  # windows-arm64-build:
  #   runs-on: windows-11-arm
  #   needs: [create-publish-branch, macos-build, windows-x64-build]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ needs.create-publish-branch.outputs.publish-branch }}
  #         submodules: 'recursive'
  #     - uses: fregante/setup-git-user@v2
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #     - name: Install dependencies
  #       run: npm i
  #     - name: Build
  #       run: npm run gyp:win:arm64
  #     - name: Commit and push
  #       run: |
  #         git add .
  #         git commit -m "build:win:arm64"
  #         git push origin ${{ needs.create-publish-branch.outputs.publish-branch }}

  linux-build:
    runs-on: ubuntu-latest
    # needs: [create-publish-branch, macos-build, windows-x64-build]
    needs: [create-publish-branch]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-publish-branch.outputs.publish-branch }}
          submodules: 'recursive'
      - uses: fregante/setup-git-user@v2
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Select Clang
        run: |
          echo "CC=clang"   >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CXXFLAGS=-std=c++20 -fexceptions" >> $GITHUB_ENV
      - name: Install dependencies
        run: npm i
      - name: Build
        run: npm run gyp:linux
      - name: Commit and push
        run: |
          git add .
          git commit -m "build:linux"
          git push origin ${{ needs.create-publish-branch.outputs.publish-branch }}

  # remove-publish-branch:
  #   runs-on: ubuntu-latest
  #   needs: [create-publish-branch, macos-build, windows-x64-build, linux-build]
  #   if: always()
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Remove publish branch
  #       run: |
  #         git push origin --delete ${{ needs.create-publish-branch.outputs.publish-branch }}
